# Use new container infrastructure to enable caching
sudo: false

# Choose a lightweight base image; we provide our own build tools.
language: c

# Caching so the next build will be fast too.
cache:
  directories:
    - $HOME/.cabal
    - $HOME/.stack

before_cache:
  - rm -fv $HOME/.cabal/packages/hackage.haskell.org/build-reports.log
  # remove files that are regenerated by 'cabal update'
  - rm -fv $HOME/.cabal/packages/hackage.haskell.org/00-index.*
  - rm -fv $HOME/.cabal/packages/hackage.haskell.org/*.json
  - rm -fv $HOME/.cabal/packages/hackage.haskell.org/01-index.cache
  - rm -fv $HOME/.cabal/packages/hackage.haskell.org/01-index.tar
  - rm -fv $HOME/.cabal/packages/hackage.haskell.org/01-index.tar.idx

# The different configurations we want to test. We have BUILD=cabal which uses
# cabal-install, and BUILD=stack which uses Stack.
#
# We set the compiler values here to tell Travis to use a different
# cache file per set of arguments.
#
# If you need to have different apt packages for each combination in the
# matrix, you can use a line such as:
#     addons: {apt: {packages: [libfcgi-dev,libgmp-dev]}}
matrix:
  include:
    # - compiler: "ghc-8.2.1"
    #   env: BUILD=cabal BENCH=--enable-benchmarks
    #   addons: {apt: {packages: [cabal-install-2.0,ghc-8.2.1,happy-1.19.5], sources: [hvr-ghc]}}
    # - compiler: "ghc-8.0.2"
    #   env: BUILD=cabal
    #   addons: {apt: {packages: [cabal-install-2.0,ghc-8.0.2,happy-1.19.5], sources: [hvr-ghc]}}
    # - compiler: "ghc-7.10.3"
    #   env: BUILD=cabal
    #   addons: {apt: {packages: [cabal-install-2.0,ghc-7.10.3,happy-1.19.5], sources: [hvr-ghc]}}
    # - compiler: "ghc-7.8.4"
    #   env: BUILD=cabal
    #   addons: {apt: {packages: [cabal-install-2.0,ghc-7.8.4,happy-1.19.5], sources: [hvr-ghc]}}

    # The Stack builds. We can pass in arbitrary Stack arguments via the ARGS
    # variable, such as using --stack-yaml to point to a different file.
    - env: BUILD=stack RESOLVER=nightly
      compiler: "stack-nightly"
      addons: {apt: {packages: [libgmp-dev, happy-1.19.5], sources: [hvr-ghc]}}
    - env: BUILD=stack RESOLVER=lts-9
      compiler: "stack-8.0.1"
      addons: {apt: {packages: [libgmp-dev, happy-1.19.5], sources: [hvr-ghc]}}
    - env: BUILD=stack RESOLVER=lts-6
      compiler: "stack-7.10.3"
      addons: {apt: {packages: [libgmp-dev, happy-1.19.5], sources: [hvr-ghc]}}
  allow_failures:
    - env: BUILD=stack RESOLVER=nightly

before_install:
  - HC=${CC}
# Using compiler above sets CC to an invalid value, so unset it
  - unset CC
  - CABALARGS=""
  - export HAPPYVER=1.19.5
  - mkdir -p ~/.local/bin
  - PATH=/opt/ghc/bin:$HOME/.cabal/bin:$HOME/.local/bin:$PATH:/opt/happy/$HAPPYVER/bin:$PATH

install:
- |
  case "$BUILD" in
    stack)
      if [ `uname` = "Darwin" ]
      then
        travis_retry curl --insecure -L https://www.stackage.org/stack/osx-x86_64 | tar xz --strip-components=1 --include '*/stack' -C ~/.local/bin
      else
        travis_retry curl -L https://www.stackage.org/stack/linux-x86_64 | tar xz --wildcards --strip-components=1 -C ~/.local/bin '*/stack'
      fi
      ;;
    cabal)
      cabal --version
      echo "$(${HC} --version) [$(${HC} --print-project-git-commit-id 2> /dev/null || echo '?')]"
      BENCH=${BENCH---disable-benchmarks}
      TEST=${TEST---enable-tests}
      travis_retry cabal update -v
      sed -i 's/^jobs:/-- jobs:/' ${HOME}/.cabal/config
      rm -fv cabal.project.local
      rm -f cabal.project.freeze
      cabal new-build -w ${HC} ${TEST} ${BENCH} --dep -j
      ;;
  esac

script:
- |
  case "$BUILD" in
    stack)
      stack --install-ghc --no-terminal --resolver $RESOLVER test --haddock --no-haddock-deps
      ;;
    cabal)
      if [ -f configure.ac ]; then autoreconf -i; fi
      rm -rf .ghc.environment.* dist/
      # build tests and benchmarks, run tests
      cabal new-build -w ${HC} -f-doctest ${TEST} ${BENCH}
      if [ "x$TEST" = "x--enable-tests" ]; then cabal new-test -w ${HC} -f-doctest ${TEST} ${BENCH}; fi
      # hlint src --cpp-define=HLINT --cpp-ansi
      ;;
  esac
